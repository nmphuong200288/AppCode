#Build and Push image to DockerHub
# version: 2.1
# jobs:
#   build_and_push:
#     docker:
#       - image: cimg/node:20.3.1
#     steps:
#       - checkout
#       - setup_remote_docker
#       - run:
#           name: Lets build and push image
#           command: |
#             version="build-$CIRCLE_BUILD_NUM"
#             echo $version
#             echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
#             docker build -t nmphuong1/todo-app:$version .
#             docker push nmphuong1/todo-app:$version
#Build and Push image to ECR
version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@8.1.3
    jobs:
      - build-and-push-image:
          context: aws-dev
          create-repo: true
          dockerfile: Dockerfile
          path: .
          repo: circleci-ecr-demo
          tag: sampleTag-build-$CIRCLE_BUILD_NUM
workflows: 
  - build-and-push-image
          
#   Update_manifest:
#     docker:
#       - image: cimg/base:2023.06
#     steps:
#       - checkout
#       - setup_remote_docker
#       - run:
#           name: Updating Manifest file 
#           command: |
#             TAG=$CIRCLE_BUILD_NUM
#             ((TAG--))
#             git clone https://github.com/nmphuong200288/kube_manifest.git
#             git config --global user.email "minhphuong49@gmail.com"
#             git config --global user.name "phuongngo"
#             pwd
#             cd kube_manifest
#             pwd
#             echo $TAG
#             sed -i "s/build-.*/build-$TAG/g" manifest/deployment.yaml
#             cat manifest/deployment.yaml
#             git add .
#             git commit -m "new build with imgTag build-$TAG"
#             git config credential.helper 'cache --timeout=120'
#             git push -q https://$GITHUB_PERSONAL_TOKEN@github.com/nmphuong200288/kube_manifest.git main 


# workflows:
#   GitOpsflow:
#     jobs:
#       - build_and_push
      # - Update_manifest:
      #     requires:
      #       - build_and_push
      


